name: release
run-name: "release '${{ github.event.inputs.version }}' version by @${{ github.actor }}"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
        default: 'patch'
        type: choice
        options:
          - 'major'
          - 'minor'
          - 'patch'

jobs:
  build:
    runs-on: ubuntu-20.04
    permissions:
      id-token: write # Enable OIDC
      pull-requests: write
      contents: write

    steps:
      -
        name: Checkout code
        uses: actions/checkout@v3.4.0

      - uses: chainguard-dev/actions/setup-gitsign@main

      -
        uses: actions/setup-node@v3.7.0
        with:
          node-version: 16
          cache: yarn

      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3.3.1
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
            ${{ runner.os }}-

      -
        name: Install dependencies
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile

      - name: Setup git
        run: |
          git config --global tag.gpgsign true

      -
        name: Build
        run: |
          yarn build
          git add -A dist

      - name: Publish
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
          VERSION=$(node -p "require('./package.json').version")
          git commit -m "release: $VERSION" -a
          git push

          gh release create $VERSION --generate-notes
